/**
 * Rule which inspects calls to `runCommand[async]` and recommends using a script API if there
 * is a script API that provides 1:1 functionality parity. This does not necessarily require an
 * API to directly match, but could be a class of APIs that have equivalent functionality.
 */
import { ESLintUtils } from '@typescript-eslint/utils';
export type ScriptRecommendation = {
    module: string;
    message: string;
};
export type ApiScriptRecommendation = ScriptRecommendation & {
    api: string;
};
export type ClassScriptRecommendation = ScriptRecommendation & {
    class: string;
};
declare const AvoidUnnecessaryCommand: ESLintUtils.RuleModule<"replaceWithScriptMethod" | "replaceWithScriptFunctionality", [], ESLintUtils.RuleListener>;
export default AvoidUnnecessaryCommand;
