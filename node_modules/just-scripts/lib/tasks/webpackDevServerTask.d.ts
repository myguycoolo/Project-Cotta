import { Configuration } from 'webpack';
import { TaskFunction } from 'just-task';
import { WebpackCliTaskOptions } from './webpackCliTask';
export interface WebpackDevServerTaskOptions extends WebpackCliTaskOptions, Configuration {
    /**
     * Alternate configuration file
     */
    config?: string;
    /**
     * Arguments to be passed into a spawn call for webpack dev server. This can be used to do things
     * like increase the heap space for the JS engine to address out of memory issues.
     */
    nodeArgs?: string[];
    /**
     * Mode: production or development
     */
    mode?: 'production' | 'development';
    /**
     * If set to true, webpack will open browser page automatically when running the dev server
     */
    open?: boolean;
    /**
     * Environment variables to be passed to the spawned process of webpack-dev-server
     */
    env?: {
        [key: string]: string | undefined;
    };
    /**
     * The tsconfig file to pass to ts-node for Typescript config
     */
    tsconfig?: string;
    /**
     * Transpile the config only
     */
    transpileOnly?: boolean;
}
export declare function webpackDevServerTask(options?: WebpackDevServerTaskOptions): TaskFunction;
//# sourceMappingURL=webpackDevServerTask.d.ts.map