"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tsOverlay = void 0;
const tryRequire_1 = require("../../tryRequire");
const tsOverlay = (overlayOptions) => {
    const ForkTsCheckerPlugin = tryRequire_1.tryRequire('fork-ts-checker-webpack-plugin');
    overlayOptions = overlayOptions || {};
    overlayOptions.loaderOptions = overlayOptions.loaderOptions || {
        transpileOnly: true,
    };
    overlayOptions.checkerOptions = overlayOptions.checkerOptions || {};
    return {
        resolve: {
            extensions: ['.wasm', '.mjs', '.js', '.ts', '.tsx', '.json'],
        },
        module: {
            rules: [
                {
                    test: /\.tsx?$/,
                    use: {
                        loader: 'ts-loader',
                        options: overlayOptions.loaderOptions,
                    },
                    exclude: /node_modules/,
                },
            ],
        },
        plugins: [...(ForkTsCheckerPlugin ? [new ForkTsCheckerPlugin(overlayOptions.checkerOptions)] : [])],
    };
};
exports.tsOverlay = tsOverlay;
//# sourceMappingURL=tsOverlay.js.map