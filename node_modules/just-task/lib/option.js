"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseCommand = exports.argv = exports.option = void 0;
const parser = require("yargs-parser");
const argOptions = {};
const descriptions = {};
const processArgs = process.argv.slice(2);
function option(key, options = {}) {
    var _a, _b;
    const booleanArgs = ['array', 'boolean', 'count', 'normalize', 'string', 'number'];
    const assignArgs = ['alias', 'coerce', 'default'];
    for (const argName of booleanArgs) {
        if (options[argName]) {
            const argOpts = ((_a = argOptions[argName]) !== null && _a !== void 0 ? _a : (argOptions[argName] = []));
            if (argOpts.indexOf(key) === -1) {
                argOpts.push(key);
            }
        }
    }
    for (const argName of assignArgs) {
        if (options[argName]) {
            ((_b = argOptions[argName]) !== null && _b !== void 0 ? _b : (argOptions[argName] = {}))[key] = options[argName];
        }
    }
    if (options.describe) {
        descriptions[key] = options.describe;
    }
}
exports.option = option;
function argv() {
    return parser(processArgs, argOptions);
}
exports.argv = argv;
function parseCommand() {
    const positionals = argv()._;
    if (positionals.length > 0) {
        return positionals[0];
    }
    return null;
}
exports.parseCommand = parseCommand;
