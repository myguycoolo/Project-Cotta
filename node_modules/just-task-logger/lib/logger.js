"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = void 0;
const chalk = require("chalk");
const parser = require("yargs-parser");
const perf_1 = require("./perf");
const argv = parser(process.argv.slice(2));
function logInternal(method, symbol, ...args) {
    const now = new Date();
    const timestamp = chalk.gray(`[${now.toLocaleTimeString()}]`);
    console[method](timestamp, symbol, ...args);
}
const emptySquare = '\u25a1';
const square = '\u25a0';
const triangle = '\u25b2';
exports.logger = {
    enableVerbose: !!argv.verbose,
    verbose(...args) {
        if (exports.logger.enableVerbose) {
            logInternal('info', chalk.gray(emptySquare), ...args);
        }
    },
    info(...args) {
        logInternal('info', chalk.green(square), ...args);
    },
    warn(...args) {
        logInternal('warn', chalk.yellow(triangle), ...args);
    },
    error(...args) {
        logInternal('error', chalk.redBright('x'), ...args);
    },
    perf(marker, ...args) {
        if (exports.logger.enableVerbose) {
            const delta = perf_1.getDeltaAndClearMark(marker);
            if (delta) {
                const ns = delta[0] * 1e9 + delta[1];
                const deltaMsg = `${ns / 1e9}s`;
                logInternal('info', chalk.cyan(square), `mark(${chalk.cyanBright(marker)}): took ${chalk.cyanBright(deltaMsg)}`, ...args);
            }
        }
    },
};
