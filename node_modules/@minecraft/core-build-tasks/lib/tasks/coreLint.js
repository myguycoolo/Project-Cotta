"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.coreLint = void 0;
const child_process_1 = require("child_process");
const fs_1 = require("fs");
const just_scripts_1 = require("just-scripts");
const path_1 = __importDefault(require("path"));
const process_1 = __importDefault(require("process"));
const LEGACY_CONFIG_FILES = ['.eslintrc.js'];
const FLAT_CONFIG_FILES = ['eslint.config.js', 'eslint.config.mjs', 'eslint.config.cjs'];
const POSSIBLE_CONFIG_FILES = [...LEGACY_CONFIG_FILES, ...FLAT_CONFIG_FILES];
function getConfigFilePath() {
    for (const file of POSSIBLE_CONFIG_FILES) {
        const configPath = path_1.default.resolve(process_1.default.cwd(), file);
        if ((0, fs_1.existsSync)(configPath)) {
            return configPath;
        }
    }
    return undefined;
}
function eslintTask(files, fix) {
    return () => {
        const configFilePath = getConfigFilePath();
        if (configFilePath) {
            // Setting ESLINT_USE_FLAT_CONFIG environment variable to indicate if the config file is flat or not.
            // ESLint is not able to determine the type in all the cases, so we need to help it.
            process_1.default.env['ESLINT_USE_FLAT_CONFIG'] = FLAT_CONFIG_FILES.some(file => configFilePath.endsWith(file))
                ? 'true'
                : 'false';
            const cmd = ['eslint', ...files, '--config', `"${configFilePath}"`, ...(fix ? ['--fix'] : []), '--color'].join(' ');
            just_scripts_1.logger.info(`Running command: ${cmd}`);
            return (0, child_process_1.execSync)(cmd, { stdio: 'inherit' });
        }
        // no-op if the config file does not exist.
        return Promise.resolve();
    };
}
function coreLint(files, fix) {
    (0, just_scripts_1.task)('verify-lint', () => {
        // If the process working directory does not have an eslint configuration file, fail the build:
        // https://eslint.org/docs/latest/use/configure/configuration-files-new
        if (!getConfigFilePath()) {
            throw new Error(`ESLint config file not found at ${process_1.default.cwd()}. Possible values: [${POSSIBLE_CONFIG_FILES.join(', ')}]`);
        }
    });
    (0, just_scripts_1.task)('eslint', eslintTask(files, fix));
    (0, just_scripts_1.task)('prettier-fix', (0, just_scripts_1.prettierTask)({ files }));
    (0, just_scripts_1.task)('prettier-check', (0, just_scripts_1.prettierCheckTask)({ files }));
    return (0, just_scripts_1.series)('verify-lint', 'eslint', (0, just_scripts_1.condition)('prettier-check', () => !fix), (0, just_scripts_1.condition)('prettier-fix', () => !!fix));
}
exports.coreLint = coreLint;
//# sourceMappingURL=coreLint.js.map