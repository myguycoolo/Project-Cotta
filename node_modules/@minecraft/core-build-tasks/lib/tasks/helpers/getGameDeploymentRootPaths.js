"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTargetWorldPath = exports.getGameDeploymentRootPaths = void 0;
const platforms_1 = require("../../platforms");
const path_1 = __importStar(require("path"));
const getOrThrowFromProcess_1 = require("./getOrThrowFromProcess");
function getGameDeploymentRootPaths() {
    const localAppDataPath = process.env['LOCALAPPDATA'];
    const customDeploymentPath = process.env['CUSTOM_DEPLOYMENT_PATH'];
    return {
        BedrockUWP: localAppDataPath
            ? (0, path_1.resolve)(localAppDataPath, 'Packages/Microsoft.MinecraftUWP_8wekyb3d8bbwe/LocalState/games/com.mojang/')
            : undefined,
        PreviewUWP: localAppDataPath
            ? (0, path_1.resolve)(localAppDataPath, 'Packages/Microsoft.MinecraftWindowsBeta_8wekyb3d8bbwe/LocalState/games/com.mojang/')
            : undefined,
        Custom: customDeploymentPath ? customDeploymentPath : undefined,
    };
}
exports.getGameDeploymentRootPaths = getGameDeploymentRootPaths;
function getTargetWorldPath() {
    let deploymentPath = undefined;
    let product;
    try {
        product = (0, getOrThrowFromProcess_1.getOrThrowFromProcess)('MINECRAFT_PRODUCT');
        deploymentPath = getGameDeploymentRootPaths()[product];
    }
    catch (_) {
        throw new Error('Unable to get deployment path. Make sure to configure package root correctly.');
    }
    if (deploymentPath === undefined) {
        throw new Error('Deployment path is undefined. Make sure to configure package root correctly.');
    }
    const projectName = (0, getOrThrowFromProcess_1.getOrThrowFromProcess)('PROJECT_NAME');
    const worldsFolderName = product == platforms_1.MinecraftProduct.Custom ? 'worlds' : 'minecraftWorlds';
    const activeWorldFolderName = product == platforms_1.MinecraftProduct.Custom ? 'Bedrock level' : `${projectName}world`;
    return path_1.default.join(deploymentPath, worldsFolderName, activeWorldFolderName);
}
exports.getTargetWorldPath = getTargetWorldPath;
//# sourceMappingURL=getGameDeploymentRootPaths.js.map